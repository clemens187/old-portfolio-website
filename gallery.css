/* Grid layout for the gallery */
.grid {
    margin: auto;
    margin-top: 100px;
    width: fit-content;
    max-width: 1210px;
    display: grid;
    gap: 30px;
    grid-template-columns: repeat(4, 1fr); /* 4 columns */
    grid-template-rows: repeat(5, 1fr); /* Auto height based on content */
    grid-auto-flow: dense; /* Fill the grid with available items */
}

/* Style each grid item */
.item {
    width: 280px;
    height: 280px;
    border-radius: 20px;
    background-color: transparent;
    padding: 20px;
    box-shadow: rgba(100, 100, 111, 0.4) 0px 7px 29px 0px;
    overflow: hidden;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
}
.item > a{
    width: 280px;
    height: 280px;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
}

/* Flexbox to center image inside the item */
.item:has(.v_smallimage),
.item:has(.h_smallimage) {
    display: flex;
    padding: 0px;
    align-items: center;
    justify-content: center;
    overflow: hidden;
}


/* Apply different styles based on image orientation */
.v_smallimage, .h_smallimage {
    width: 100%; /* Default for both, but we'll adjust based on orientation */
    height: 100%; /* Default for both, but we'll adjust based on orientation */
    object-fit: cover; /* Ensures the image covers the container */
    border-radius: 20px;
    position: relative;
}

/* Vertical image - fill height, center horizontally */
.v_smallimage {
    width: auto; /* Adjust width to auto, so height is prioritized */
    height: 100%; /* Fill the height */
    object-fit: cover; /* Cover the container, even if part of the image gets cropped */
}

/* Horizontal image - fill width, center vertically */
.h_smallimage {
    width: 100%; /* Fill the width */
    height: auto; /* Adjust height to auto, so width is prioritized */
    object-fit: cover; /* Cover the container, even if part of the image gets cropped */
}


/* Optional: Lightbox custom background */
.lightbox {
    background: transparent;
}

@media screen and (max-width: 1270px) {

    .grid {
        margin: auto;
        margin-top: 100px;
        max-width: 90%;
        height: calc(7 * 28vw);
        display: grid;
        gap: 20px;
        grid-template-columns: repeat(3, 28vw); /* 4 columns */
        grid-template-rows: repeat(7, 28vw); /* Auto height based on content */
        grid-auto-flow: dense; /* Fill the grid with available items */
    }
    .item{
        width: 28vw;
        height: 28vw;
    }
    .item > a{
        width: 28vw;
        height: 28vw;
    }
  }
  @media screen and (max-width: 950px) {
    .grid {
        margin: auto;
        margin-top: 100px;
        height: calc(10 * 40vw);
        display: grid;
        gap: 15px;
        grid-template-columns: repeat(2, 40vw);
        grid-template-rows: repeat(10, 40vw);
    }
    .item{
        width: 40vw;
        height: 40vw;
    }
    .item > a{
        width: 40vw;
        height: 40vw;
    }
  }